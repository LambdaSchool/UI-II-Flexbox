/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* Set every element's box-sizing to border-box */
* {
    box-sizing: border-box;
}

html, body {
    height: 100%;
    font-family: 'Titillium Web', sans-serif;
}

h1, h2, h3, h4, h5 {
    font-family: 'Bangers', cursive;
    letter-spacing: 1px;
    margin-bottom: 15px;
}

/* Copy and paste your work from yesterday here and start to refactor into flexbox */

.container {
	width: 980px;
	margin: auto;
	padding: 0 40px;
}

.content {
	padding-top: 100px;
}

.column-container {
	display: flex;
	justify-content: space-between;
}

.wrap {
	flex-wrap: wrap;
	margin: 20px 0px;
}

.box {
	width: 48%;
	border: 1px solid;
	margin: 20px 0px;
	padding: 20px;
	background: lightgrey;
}

.column {
	margin: 30px 10px;
}

.title-header {
	margin-bottom: 70px;
	align-items: center;
	justify-content: space-between;
}

.title {
	text-align: center;
	margin-left: 90px;
}

.title h1 {
	font-size: 55pt;
}

.title-img {
	width: 380px;
	height: 380px;
}

footer {
	text-align: center;
	margin: 60px auto;
}

.contact-info {
	margin: 30px 0;
}

.middle-img {
	width: 100%;
}

nav {
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 10px 0px;
	margin-bottom: 10px; 
}

.fixed {
	width: 900px;
	position: fixed;
	background-image: linear-gradient(indigo 45%, rgba(0, 0, 0, 0));
	padding: 10px 30px;
}

nav a {
	text-decoration: none;
	color: grey;
}

nav.fixed a {
	color: lightgray;
}

nav img {
	cursor: pointer;
}

.services-header-img {
	width: 100%;
}

button.plain-white {
	margin-top: 20px;
	background: white;
	padding: 10px 30px;
	border: 1px solid;
	border-radius: 5px;
}

.services-facts-list {
	list-style: square;
	list-style-position: inside;
	line-height: 2;
	margin-top: 20px;
}

section.services-intro {
	margin: 30px 0px;
}

section.services-intro h1 {
	font-size: 20pt;
}

/* ~BUTTON NONSENSE~ */

/*
	There's absolutely no way this last part would 
	have happened without the examples of:

	https://codepen.io/Volorf/pen/qopzaQ?editors=1100
	https://codepen.io/zachacole/pen/KdGzgb?editors=1100

	from whom I borrowed heavily
	Credit to them for the heavy lifting on CSS animations.

	I'm fairly happy with how it came out, and I learned quite a bit in the process
	But doing this in pure CSS is still a bit over my head.
*/

button.btn-fancy {
	position: relative;
	height: 50px;
	width: 200px;
	border: 0;
	border-radius: 5px;
	text-transform: uppercase;
	font-size: 1.1em;
	letter-spacing: 0.2em;
	overflow: hidden;
	box-shadow: 0 4px 12px 0 rgba(152, 160, 180, 10);
	z-index: -2;
}


.fill {
	position: absolute;
	background: linear-gradient(-45deg, #fe9245, #e2378b, #4f61af, #39b5bf);
  background-size: 600%;
	height: 70px;
	border-radius: 5px;
	margin: -40px 0 0 -140px;
	z-index: -1;
	transition: all 0.4s ease;
  opacity: 0;
	transition: opacity 0.5s ease-out;
	width: 420px;
}

.btn-container {
	text-align: center;
	position: relative;
	margin: 0 auto;
	cursor: pointer;
}

.btn-container .fill {
	animation: gradient 4s ease infinite;
}

.btn-container:hover .fill {
	opacity: 1;
	transition: opacity 2s ease;
}

@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}
